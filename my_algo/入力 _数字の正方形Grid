#include <bits/stdc++.h>
using namespace std;

// Gridの出力テンプレート
template <class T> void output_Grid(T &A) {
  long long size_H = A.size();
  long long size_W = A.at(0).size();
  for (long long i = 0; i < size_H; i++) { // 行
    for (int j = 0; j < size_W; j++) {     // 列
      cout << A[i][j] << " ";
    }
    cout << endl;
  }
}
/*
入力例
3
1 2 3
4 5 6
7 8 9

1 2 3
4 5 6
7 8 9

1 2 3
4 5 6
7 8 9

1 2 3
4 5 6
7 8 9
*/
int main() {
  int N;
  cin >> N;
  vector<vector<int>> Grid(N, vector<int>(N, 0));

  // そのまま
  for (int i = 0; i <= N - 1; i++) {
    for (int j = 0; j <= N - 1; j++) {
      cin >> Grid[i][j];
    }
  }
  output_Grid(Grid);
  cout << endl;

  cout << "左右だけ反転して受け取る" << endl;
  vector<vector<int>> sayu(N, vector<int>(N, 0));
  for (int i = 0; i <= N - 1; i++) {
    for (int j = N - 1; j >= 0; j--) {
      cin >> sayu[i][j];
    }
  }
  output_Grid(sayu);
  cout << endl;

  cout << "上下だけ反転して受け取る" << endl;
  vector<vector<int>> joge(N, vector<int>(N, 0));
  for (int i = N - 1; i >= 0; i--) {
    for (int j = 0; j <= N - 1; j++) {
      cin >> joge[i][j];
    }
  }
  output_Grid(joge);
  cout << endl;

  cout << "左右上下を反転して受け取る" << endl;
  vector<vector<int>> taikakusen(N, vector<int>(N, 0));
  for (int i = N - 1; i >= 0; i--) {
    for (int j = N - 1; j >= 0; j--) {
      cin >> taikakusen[i][j];
    }
  }
  output_Grid(taikakusen);
  cout << endl;
}
